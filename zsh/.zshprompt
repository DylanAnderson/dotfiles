# Custom zsh prompt without any frameworks
# References:
# [1] https://gist.github.com/mislav/1712320
# [2] https://github.com/robbyrussell/oh-my-zsh/blob/d22189848e3549800486d009aeb7d6a692fd55be/lib/git.zsh

## Find my full .zshrc at <github.com/mislav/dotfiles/blob/master/zshrc>.

# setup

autoload colors; colors;
export LSCOLORS="Gxfxcxdxbxegedabagacad"
setopt prompt_subst

# Convenience ternary to change color based on last command return status
local ret_status="%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )"
# Create left prompt
PROMPT='%{$fg[blue]%}(%m)%{$reset_color%} ${ret_status} %{$fg[cyan]%}%c%{$reset_color%} '


ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg_bold[blue]%}git:(%{$fg[red]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[blue]%}) %{$fg[yellow]%}✗"
ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg[blue]%})"

# show git branch/tag, or name-rev if on detached head
parse_git_branch() {
  (command git symbolic-ref -q HEAD || command git name-rev --name-only --no-undefined --always HEAD) 2>/dev/null
}

# Check if clean or dirty
parse_git_dirty() {
  if command git diff-index --quiet HEAD 2> /dev/null; then
    echo "$ZSH_THEME_GIT_PROMPT_CLEAN"
  else
    echo "$ZSH_THEME_GIT_PROMPT_DIRTY"
  fi
}
# parse_git_dirty() {
#   echo ""
# }
# if in a git repo, show dirty indicator + git branch
git_custom_status() {
  local git_where="$(parse_git_branch)"
  [ -n "$git_where" ] && echo "$ZSH_THEME_GIT_PROMPT_PREFIX${git_where#(refs/heads/|tags/)}$(parse_git_dirty)$ZSH_THEME_GIT_PROMPT_SUFFIX"
}

# Create right prompt
RPS1='$(git_custom_status) $EPS1'
